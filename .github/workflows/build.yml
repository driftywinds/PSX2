name: Build PSX2 APK

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - debug

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Install Android NDK
        run: |
          echo "y" | sdkmanager "ndk;28.2.13676358"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/28.2.13676358" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/28.2.13676358" >> $GITHUB_ENV
      
      - name: Install CMake
        run: |
          echo "y" | sdkmanager "cmake;3.22.1"
      
      - name: Decode Keystore
        if: github.event.inputs.build_type == 'release'
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/keystore.jks
      
      - name: Create keystore.properties
        if: github.event.inputs.build_type == 'release'
        run: |
          echo "storeFile=$GITHUB_WORKSPACE/keystore.jks" > keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build APK
        run: |
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            ./gradlew assembleRelease
          else
            ./gradlew assembleDebug
          fi
      
      - name: Get APK path
        id: apk_path
        run: |
          if [ "${{ github.event.inputs.build_type }}" = "release" ]; then
            APK_PATH=$(find app/build/outputs/apk/release -name "*.apk" | head -n 1)
          else
            APK_PATH=$(find app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          fi
          echo "path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "name=$(basename $APK_PATH)" >> $GITHUB_OUTPUT
      
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: PSX2-${{ github.event.inputs.build_type }}-${{ github.run_number }}
          path: ${{ steps.apk_path.outputs.path }}
          retention-days: 30
      
      - name: Create Release (Optional)
        if: github.event.inputs.build_type == 'release'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_number }}
          name: PSX2 Build ${{ github.run_number }}
          draft: true
          files: ${{ steps.apk_path.outputs.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Cleanup
        if: always()
        run: |
          rm -f $GITHUB_WORKSPACE/keystore.jks
          rm -f keystore.properties
